!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return e[n].call(u.exports,u,u.exports,r),u.l=!0,u.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var u in e)r.d(n,u,function(t){return e[t]}.bind(null,u));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t),r.d(t,"Dice",(function(){return u})),r.d(t,"Dices",(function(){return o}));class n{constructor(e){this.sides=e||n.DEFAULT_SIDES}roll(){return this.value=Math.floor(Math.random()*this.sides+1),this}getSides(){return this.sides}getValue(){return this.value}}n.DEFAULT_SIDES=6;var u=n;class i{constructor(e,t){this.dices=Array.from(Array(e||i.DEFAULT_AMOUNT),(e,r)=>new u(t))}roll(e={unique:!1}){const t=[];if(e.unique&&this.getAmount()>this.getSides())throw new Error("To achieve unique values, the sides amount must be greater than (or equals to) dice amount");return this.dices.map(r=>{let n=!0;do{r.roll(),n=!e.unique||e.unique&&-1===t.indexOf(r.getValue()),n&&t.push(r.getValue())}while(!n)}),this}getAmount(){return this.dices.length}getSides(){return this.dices[0].getSides()}getValues(){return this.dices.map(e=>e.getValue())}getUniqueValues(){return this.getValues().reduce((e,t)=>e.includes(t)?e:[...e,t],[])}}i.DEFAULT_AMOUNT=2;var o=i}])}));
//# sourceMappingURL=dices.min.js.map